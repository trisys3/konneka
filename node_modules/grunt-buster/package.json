{
  "name": "grunt-buster",
  "description": "Grunt task for running Buster.JS tests in Node.js or headless in PhantomJS",
  "version": "0.3.1",
  "homepage": "https://github.com/busterjs/grunt-buster",
  "author": {
    "name": "Thomas Pedersen",
    "url": "http://thedersen.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/busterjs/grunt-buster.git"
  },
  "bugs": {
    "url": "https://github.com/busterjs/grunt-buster/issues"
  },
  "license": "MIT",
  "main": "./tasks/buster.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "start": "grunt --force default watch",
    "test": "grunt"
  },
  "devDependencies": {
    "buster": ">=0.7.6",
    "grunt": "~0.4.1",
    "grunt-cli": "~0.1.8",
    "grunt-contrib-jshint": "~0.4.3",
    "grunt-contrib-watch": "~0.4.0"
  },
  "dependencies": {
    "when": "~2.0.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "grunt",
    "buster",
    "buster.js"
  ],
  "readme": "# grunt-buster [![Build Status](https://travis-ci.org/busterjs/grunt-buster.png?branch=master)](https://travis-ci.org/busterjs/grunt-buster)\n\n> [Grunt](http://gruntjs.com/) task for running\n> [Buster.JS](http://busterjs.org/) tests in [Node.js](http://nodejs.org/) or\n> headless in [PhantomJS](http://phantomjs.org/)\n\n\n## Getting started\n\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out\nthe [Getting started](http://gruntjs.com/getting-started) guide, as it explains\nhow to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as\ninstall and use Grunt plugins. Once you're familiar with that process, you may\ninstall this plugin with this command:\n\n``` shell\nnpm install grunt-buster\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile\nwith this line of JavaScript:\n\n``` js\ngrunt.loadNpmTasks('grunt-buster');\n```\n\nThen, you must install Buster.JS:\n\n``` shell\nnpm install buster\n```\n\n### Browser tests\n\nIf you want to run tests for the browser environment, you also need to [install\nPhantomJS](http://phantomjs.org/):\n\n``` shell\nnpm install phantomjs\n```\n\n\n## The \"buster\" task\n\n### Overview\n\nIn your project's Gruntfile, add a section named `buster` to the data object\npassed into `grunt.initConfig()`. You then need to define at least one target\nfor `grunt buster` to have any effect.\n\nExample of a minimal working configuration:\n\n``` js\nbuster: {\n  foo: {}\n}\n```\n\nThe `buster` object can have an arbitrary number of targets, like `foo` in the\nabove example. If you run `grunt buster`, all targets are executed. If you run\n`grunt buster:foo`, only the `foo` target is executed.\n\n### Options\n\nNo options are needed to get started, as grunt-buster will use default values\nif none is specified.\n\n#### test\n\nAn object with options passed as command line arguments to `buster test`. For\navailable options for `buster test` run:\n\n``` shell\nbuster test --help\n```\n\n#### server\n\nAn object with options passed as command line arguments to `buster server`. For\navailable options for `buster server` run:\n\n``` shell\nbuster server --help\n```\n\n#### options.growl\n\nGrowl support is optional. If you would like to use it follow the instructions\non [how to install node-growl](https://github.com/visionmedia/node-growl), then\nenable Growl notifications in the `buster` task in your Gruntfile.\n\nExample:\n\n``` js\nbuster: {\n  options: {\n    growl: true\n  }\n}\n```\n\nYou should now get notifications whenever your test suite passes or fails.\n\n### Examples\n\n``` js\nbuster: {\n  foo: {\n    test: {\n      config: 'path/to/my/buster.js'\n    },\n    server: {\n      port: 1111\n    }\n  },\n  bar: {\n    options: {\n      growl: false\n    }\n  },\n  options: {\n    growl: true\n  }\n}\n```\n\nThe above config will for the `foo` target run `buster test` with the\nargument `--config path/to/my/buster.js`, and run `buster server` with the\nargument `--port 1111`, with Growl notifications when the tests complete.\n\nFor the `bar` target, default configuration will be used, and Growl\nnotifications will be turned off.\n\n## Running servers, tests and PhantomJS separately\n\nIt is possible to start one or more Buster.JS servers, PhantomJS instances or\nindividual Buster.JS test runs by passing Grunt arguments when invoking tasks.\n\nGrunt allows for command line arguments to be passed to multitasks, like so:\n`grunt task:subtask:argument1:argument2`. To pass arguments to, and execute all\nsubtasks of a multitask, skip the subtask name: `grunt task::argument`. In\n`grunt-buster`, we use that to gain more granular control over which Buster.JS\ncomponents are executed, as described below in this section.\n\n#### Start all configured Buster.JS servers\n\n```\ngrunt buster::server\n```\n\nThis starts all configured Buster.JS servers, without starting a Phantom.JS\ninstance nor running any tests.\n\nNote: Grunt will not block the `server` and `phantomjs` tasks by default. They\nare intended to be used in combination with blocking tasks like\n`grunt-contrib-watch`. If you do not want to run either of the two in\ncombination with a watch command, you can supply the `block` argument:\n\n```\ngrunt buster::server:block\n```\n\n#### Start instances of PhantomJS\n\n```\ngrunt buster::phantomjs\n```\n\nThis allows you to capture browsers manually before executing the tests\nseparately (see below).\n\n#### Run tests\n\nExecute the tests only and not spawn neither a Buster.JS server nor PhantomJS,\nas they are assumed to be started manually in some other way.\n\n```\ngrunt buster::test\n```\n\n## Development\n\nIf you wish to contribute, please ensure a green test suite.\n\nInstall development dependencies:\n\n```\nnpm install\n```\n\nRunning the test suite:\n\n```\nnpm test\n```\n\nStarting a watch loop listening to file changes and running the test suite:\n\n```\nnpm start\n```\n\n#### Making releases\n\n* Update the `Release history`\n* Update the `package.json` version number\n* Tag the release commit with correct version number\n* Push new release to `npm`\n\n\n## Release history\n\n#### v0.3.1 (2013-11-07)\n\n* Fix issue where failing tests make grunt-buster hang\n\n#### v0.3.0 (2013-10-31)\n\n* Fix #9 - Allow for more granular control over `buster-server`, `PhantomJS`\n  and `buster-test` execution\n* Only log buster-server output if Grunt is run with `verbose`\n\n#### v0.2.1 (2013-05-13)\n\n* Fix broken URLs in package description\n\n#### v0.2.0 (2013-05-13)\n\n* Updated project URLs after move to busterjs organization on GitHub\n* Require Node.js >= 0.8.0\n* Fix `path.existsSync` deprecation warning\n* Declare a peer dependency on Grunt ~0.4.0\n* Made Growl notifications optional. You must now install the `growl` package\n  from npm and set `options.growl` to `true` to get notifications.\n* Added support for Grunt multi-tasks. You must now define at least one target\n  for the `buster` task to have any work to do. See the above docs for a\n  minimal config example. (Thanks to Richard Nespithal)\n* Add `--server` option to `buster-test`\n  (Thanks to [Andreas Köberle](https://github.com/eskimoblood))\n* Add support for locally installed versions of Buster.JS and PhantomJS\n  (Thanks to [Stein Martin Hustad](https://github.com/smh))\n\n#### v0.1.2 (2012-10-03)\n\n* Looks for buster.js in test/ and spec/ in addition to the root folder\n* Fixed corrupt error.png and ok.png (Thanks to [Paweł Maciejewski](https://github.com/fragphace))\n* Removed console non-printable characters from growl text message (Thanks to\n  [Paweł Maciejewski](https://github.com/fragphace))\n\n#### v0.1.1 (2012-07-29)\n\n* Ensure that tests is not run until PhantomJS finished starting (thanks to\n  [Harrison](https://github.com/Harrison))\n\n#### v0.1.0 (2012-07-24)\n\n* Initial release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-buster@0.3.1",
  "_shasum": "3a81544e478d7cadc319e207545202bf1f5056db",
  "_from": "grunt-buster@",
  "_resolved": "https://registry.npmjs.org/grunt-buster/-/grunt-buster-0.3.1.tgz"
}
