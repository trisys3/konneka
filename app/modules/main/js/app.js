(function() {
  'use strict';
  var angular, config, controller, directive, filter, iotApp, mainCtrls, mainDirecs, mainFils, mainRtes, mainServs, name, service,
    __hasProp = {}.hasOwnProperty;

  angular = require('angular');

  mainRtes = require('./config/mainRte');

  mainFils = require('./filters/mainFils');

  mainServs = require('./services/mainServ');

  mainDirecs = require('./directives/mainDirec');

  mainCtrls = require('./controllers/mainCtrl');

  iotApp = angular.module('iotApp', ['iotApp.config', 'iotApp.filters', 'iotApp.services', 'iotApp.directives', 'iotApp.controllers']);

  for (name in mainRtes) {
    if (!__hasProp.call(mainRtes, name)) continue;
    config = mainRtes[name];
    iotApp.module('iotApp.config', [config.deps]).config([config.def]);
  }

  for (name in mainFils) {
    if (!__hasProp.call(mainFils, name)) continue;
    filter = mainFils[name];
    iotApp.module('iotApp.filters', [filter.deps]).filter(name([filter.def]));
  }

  for (name in mainServs) {
    if (!__hasProp.call(mainServs, name)) continue;
    service = mainServs[name];
    iotApp.module('iotApp.services', [service.deps]).factory(name([service.def]));
  }

  for (name in mainDirecs) {
    if (!__hasProp.call(mainDirecs, name)) continue;
    directive = mainDirecs[name];
    iotApp.module('iotApp.directives', [directive.deps]).directive(name([directive.def]));
  }

  for (name in mainCtrls) {
    if (!__hasProp.call(mainCtrls, name)) continue;
    controller = mainCtrls[name];
    iotApp.module('iotApp.controllers', [controller.deps]).controller(name([controller.def]));
  }

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9tb2R1bGVzL21haW4vY29mZmVlL2FwcC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxFQUFBLFlBQUEsQ0FBQTtBQUFBLE1BQUEsMkhBQUE7SUFBQSw2QkFBQTs7QUFBQSxFQUVBLE9BQUEsR0FBVSxPQUFBLENBQVEsU0FBUixDQUZWLENBQUE7O0FBQUEsRUFJQSxRQUFBLEdBQVcsT0FBQSxDQUFRLGtCQUFSLENBSlgsQ0FBQTs7QUFBQSxFQUtBLFFBQUEsR0FBVyxPQUFBLENBQVEsb0JBQVIsQ0FMWCxDQUFBOztBQUFBLEVBTUEsU0FBQSxHQUFZLE9BQUEsQ0FBUSxxQkFBUixDQU5aLENBQUE7O0FBQUEsRUFPQSxVQUFBLEdBQWEsT0FBQSxDQUFRLHdCQUFSLENBUGIsQ0FBQTs7QUFBQSxFQVFBLFNBQUEsR0FBWSxPQUFBLENBQVEsd0JBQVIsQ0FSWixDQUFBOztBQUFBLEVBbUJBLE1BQUEsR0FBUyxPQUFPLENBQUMsTUFBUixDQUFlLFFBQWYsRUFBeUIsQ0FDaEMsZUFEZ0MsRUFFaEMsZ0JBRmdDLEVBR2hDLGlCQUhnQyxFQUloQyxtQkFKZ0MsRUFLaEMsb0JBTGdDLENBQXpCLENBbkJULENBQUE7O0FBMkJBLE9BQUEsZ0JBQUE7OzRCQUFBO0FBQ0UsSUFBQSxNQUFNLENBQUMsTUFBUCxDQUFjLGVBQWQsRUFBK0IsQ0FBQyxNQUFNLENBQUMsSUFBUixDQUEvQixDQUNFLENBQUMsTUFESCxDQUNVLENBQUMsTUFBTSxDQUFDLEdBQVIsQ0FEVixDQUFBLENBREY7QUFBQSxHQTNCQTs7QUErQkEsT0FBQSxnQkFBQTs7NEJBQUE7QUFDRSxJQUFBLE1BQU0sQ0FBQyxNQUFQLENBQWMsZ0JBQWQsRUFBZ0MsQ0FBQyxNQUFNLENBQUMsSUFBUixDQUFoQyxDQUNFLENBQUMsTUFESCxDQUNVLElBQUEsQ0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFSLENBQUwsQ0FEVixDQUFBLENBREY7QUFBQSxHQS9CQTs7QUFtQ0EsT0FBQSxpQkFBQTs7OEJBQUE7QUFDRSxJQUFBLE1BQU0sQ0FBQyxNQUFQLENBQWMsaUJBQWQsRUFBaUMsQ0FBQyxPQUFPLENBQUMsSUFBVCxDQUFqQyxDQUNFLENBQUMsT0FESCxDQUNXLElBQUEsQ0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFULENBQUwsQ0FEWCxDQUFBLENBREY7QUFBQSxHQW5DQTs7QUF1Q0EsT0FBQSxrQkFBQTs7aUNBQUE7QUFDRSxJQUFBLE1BQU0sQ0FBQyxNQUFQLENBQWMsbUJBQWQsRUFBbUMsQ0FBQyxTQUFTLENBQUMsSUFBWCxDQUFuQyxDQUNFLENBQUMsU0FESCxDQUNhLElBQUEsQ0FBSyxDQUFDLFNBQVMsQ0FBQyxHQUFYLENBQUwsQ0FEYixDQUFBLENBREY7QUFBQSxHQXZDQTs7QUEyQ0EsT0FBQSxpQkFBQTs7aUNBQUE7QUFDRSxJQUFBLE1BQU0sQ0FBQyxNQUFQLENBQWMsb0JBQWQsRUFBb0MsQ0FBQyxVQUFVLENBQUMsSUFBWixDQUFwQyxDQUNFLENBQUMsVUFESCxDQUNjLElBQUEsQ0FBSyxDQUFDLFVBQVUsQ0FBQyxHQUFaLENBQUwsQ0FEZCxDQUFBLENBREY7QUFBQSxHQTNDQTtBQUFBIiwiZmlsZSI6ImFwcC9tb2R1bGVzL21haW4vanMvYXBwLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXHJcblxyXG5hbmd1bGFyID0gcmVxdWlyZSAnYW5ndWxhcidcclxuXHJcbm1haW5SdGVzID0gcmVxdWlyZSAnLi9jb25maWcvbWFpblJ0ZSdcclxubWFpbkZpbHMgPSByZXF1aXJlICcuL2ZpbHRlcnMvbWFpbkZpbHMnXHJcbm1haW5TZXJ2cyA9IHJlcXVpcmUgJy4vc2VydmljZXMvbWFpblNlcnYnXHJcbm1haW5EaXJlY3MgPSByZXF1aXJlICcuL2RpcmVjdGl2ZXMvbWFpbkRpcmVjJ1xyXG5tYWluQ3RybHMgPSByZXF1aXJlICcuL2NvbnRyb2xsZXJzL21haW5DdHJsJ1xyXG5cclxuIyAjIG1haW4gQW5ndWxhciBtb2R1bGVcclxuIyBtb2R1bGUuZXhwb3J0cyA9IGFuZ3VsYXIubW9kdWxlICdpb3RBcHAnLCBbXHJcbiMgXHRyZXF1aXJlICcuL2NvbmZpZy9tYWluUnRlJ1xyXG4jIFx0cmVxdWlyZSAnLi9maWx0ZXJzL21haW5GaWxzJ1xyXG4jIFx0cmVxdWlyZSAnLi9zZXJ2aWNlcy9tYWluU2VydidcclxuIyBcdHJlcXVpcmUgJy4vZGlyZWN0aXZlcy9tYWluRGlyZWMnXHJcbiMgXHRyZXF1aXJlICcuL2NvbnRyb2xsZXJzL21haW5DdHJsJ1xyXG4jIF1cclxuXHJcbmlvdEFwcCA9IGFuZ3VsYXIubW9kdWxlICdpb3RBcHAnLCBbXHJcbiAgJ2lvdEFwcC5jb25maWcnXHJcbiAgJ2lvdEFwcC5maWx0ZXJzJ1xyXG4gICdpb3RBcHAuc2VydmljZXMnXHJcbiAgJ2lvdEFwcC5kaXJlY3RpdmVzJ1xyXG4gICdpb3RBcHAuY29udHJvbGxlcnMnXHJcbl1cclxuXHJcbmZvciBvd24gbmFtZSwgY29uZmlnIG9mIG1haW5SdGVzXHJcbiAgaW90QXBwLm1vZHVsZSAnaW90QXBwLmNvbmZpZycsIFtjb25maWcuZGVwc11cclxuICAgIC5jb25maWcgW2NvbmZpZy5kZWZdXHJcblxyXG5mb3Igb3duIG5hbWUsIGZpbHRlciBvZiBtYWluRmlsc1xyXG4gIGlvdEFwcC5tb2R1bGUgJ2lvdEFwcC5maWx0ZXJzJywgW2ZpbHRlci5kZXBzXVxyXG4gICAgLmZpbHRlciBuYW1lIFtmaWx0ZXIuZGVmXVxyXG5cclxuZm9yIG93biBuYW1lLCBzZXJ2aWNlIG9mIG1haW5TZXJ2c1xyXG4gIGlvdEFwcC5tb2R1bGUgJ2lvdEFwcC5zZXJ2aWNlcycsIFtzZXJ2aWNlLmRlcHNdXHJcbiAgICAuZmFjdG9yeSBuYW1lIFtzZXJ2aWNlLmRlZl1cclxuXHJcbmZvciBvd24gbmFtZSwgZGlyZWN0aXZlIG9mIG1haW5EaXJlY3NcclxuICBpb3RBcHAubW9kdWxlICdpb3RBcHAuZGlyZWN0aXZlcycsIFtkaXJlY3RpdmUuZGVwc11cclxuICAgIC5kaXJlY3RpdmUgbmFtZSBbZGlyZWN0aXZlLmRlZl1cclxuXHJcbmZvciBvd24gbmFtZSwgY29udHJvbGxlciBvZiBtYWluQ3RybHNcclxuICBpb3RBcHAubW9kdWxlICdpb3RBcHAuY29udHJvbGxlcnMnLCBbY29udHJvbGxlci5kZXBzXVxyXG4gICAgLmNvbnRyb2xsZXIgbmFtZSBbY29udHJvbGxlci5kZWZdIl19